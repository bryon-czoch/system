#!/usr/bin/env bash

# A Bash script for setting up a development enviroment on my computer.

ROOT_UID=0  # UID for root users
E_ROOT=1    # Root exit error
E_RVM=2     # RVM not installed error

PROJECTS_DIR="$HOME/projects"
LOCAL_DIR="$HOME/local"

# Ask GNOME for the web browser command.
BROWSER=`gconftool-2 --get '/desktop/gnome/url-handlers/http/command' | cut -f1 -d' ' `

# The ruby version that will be installed via RVM.
RUBY_VERSION='1.9.3'

# The Node.js version that will be installed via git.
NODE_VERSION='v0.6.18'

if [[ $EUID -eq 0 ]]; then
  echo "You cannot run this script as root!"
  exit $E_ROOT
fi

# Create a projects directory if one doesn't exist.
if [[ -d "$PROJECTS_DIR" ]]; then
  echo "Skipping creating of directory $PROJECTS_DIR due to it already existing."
else
  echo "Creating directory $PROJECTS_DIR"
  mkdir "$PROJECTS_DIR"
fi

# Create local directory for user binaries if one doesn't exist.
if [[ -d "$LOCAL_DIR" ]]; then
  echo "Skipping creating of directory $LOCAL_DIR due to it already existing."
else
  echo "Creating directory $LOCAL_DIR"
  mkdir -p $LOCAL_DIR/{bin,src}
fi

# Using apt-get so ensure it is up to date first.
sudo apt-get update

echo "Installing packages."

# Install all required packages. See PACKAGES.md for the full list.
sudo apt-get install build-essential curl git git-doc git-gui git-man gitk xclip vim vim-gnome aptitude openssl libreadline6 libreadline6-dev zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-0 libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev automake libtool bison subversion -y

# Install RVM.
curl -L get.rvm.io | bash -s stable
echo '[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*' >> $HOME/.bashrc

# Use RVM to install ruby.
if [[ -f "$HOME/.rvm/scripts/rvm" ]]; then
  source "$HOME/.rvm/scripts/rvm"
  rvm install $RUBY_VERSION
else
  echo "It appears that RVM has not been installed."
  exit $E_RVM
fi

# Install Node.js
cd $LOCAL_DIR/src
git clone git://github.com/joyent/node.git
cd node
git checkout $NODE_VERSION
./configure --prefix=$LOCAL_DIR
make
make install
echo 'PATH=$PATH:'$LOCAL_DIR/bin >> $HOME/.bashrc

# Generate SSH public key.
if [[ -f "$HOME/.ssh/id_rsa.pub" ]]; then
  echo "Skipping generation of SSH public key due to one already exists."
else
  echo "Generating SSH key."
  ssh-keygen -t rsa -N "" -f "$HOME/.ssh/id_rsa"
fi

# Copy public SSH key into the clipboard so that it can be pasted in the Github account.
if [[ -f "$HOME/.ssh/id_rsa.pub" ]]; then
  echo "Copying SSH public key to the clipboard. Paste it into your Github account."
  xclip -selection clip < $HOME/.ssh/id_rsa.pub
  "$BROWSER" https://github.com/account/ssh
fi

# Configure the git globals name and email.
echo "Configuring git globals."
echo -n "Enter your name and press [ENTER]: "
read name
echo -n "Enter your email address and press [ENTER]: "
read email

git config --global user.name "$name"
git config --global user.email "$email"

exit 0
